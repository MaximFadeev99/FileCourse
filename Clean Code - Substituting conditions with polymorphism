using System;
using System.Collections.Generic;

namespace FileCourse
{
    class Program
    {
        static void Main(string[] args)
        {
            OrderForm orderForm = new OrderForm (PaymentSystemFactory.GetAllIds());
        }
    }

    public class OrderForm
    {
        public OrderForm(IReadOnlyList<string> systemIds )
        {
            Console.WriteLine("Введите ID платежной системы:");

            foreach (string systemId in systemIds)
                Console.WriteLine(systemId);

            PaymentSystemFactory.TryPay(Console.ReadLine());
        }
    }

    public static class PaymentSystemFactory
    {
        public const string QiwiId = "Qiwi";
        public const string WebMoneyId = "WebMoney";
        public const string CardId = "Card";

        public static void TryPay(string systemId)
        {
            PaymentSystem chosenSystem = Create(systemId);
            chosenSystem.Pay();
        }

        public static IReadOnlyList<string> GetAllIds() 
        {
            IReadOnlyList<string> ids = new List<string>()
            {
                QiwiId, WebMoneyId, CardId
            };

            return ids;     
        }

        private static PaymentSystem Create(string systemId) 
        {
            PaymentSystem paymentSystem;

            if (systemId == QiwiId)
            {
                paymentSystem = new QiwiPaymentSystem();
            }
            else if (systemId == WebMoneyId)
            {
                paymentSystem = new WebMoneyPaymentSystem();
            }
            else if (systemId == CardId)
            {
                paymentSystem = new CardPaymentSystem();
            }
            else 
            {
                throw new ArgumentException(nameof(systemId));
            }

            return paymentSystem;
        }
    }

    public class CardPaymentSystem : PaymentSystem
    {
        public CardPaymentSystem() : base(PaymentSystemFactory.CardId) { }

        protected override void CallWebInterface()
        {
            Console.WriteLine($"Вызов API банка эмитера карты {SystemId}...");
            //симуляция веб интерфейса под Card
        }
    }

    public class WebMoneyPaymentSystem : PaymentSystem
    {
        public WebMoneyPaymentSystem() : base(PaymentSystemFactory.WebMoneyId) { }

        protected override void CallWebInterface()
        {
            Console.WriteLine($"Вызов API {SystemId}...");
            //симуляция веб интерфейса под WebMoney
        }
    }

    public class QiwiPaymentSystem : PaymentSystem
    {
        public QiwiPaymentSystem() : base(PaymentSystemFactory.QiwiId) { }

        protected override void CallWebInterface()
        {
            Console.WriteLine($"Перевод на страницу {SystemId}...");
            //симуляция веб интерфейса под QIWI
        }
    }

    public abstract class PaymentSystem : IPaymentSystem
    {
        public PaymentSystem(string systemId) =>
            SystemId = systemId;

        public string SystemId { get; }

        public void Pay()
        {
            CallWebInterface();
            ShowPaymentResult();
        }

        protected abstract void CallWebInterface();

        private void ShowPaymentResult()
        {
            Console.WriteLine($"Вы оплатили с помощью {SystemId}");
            Console.WriteLine($"Проверка платежа через {SystemId}...");
            Console.WriteLine("Оплата прошла успешно!");
            Console.ReadKey();
        }
    }

    public interface IPaymentSystem
    {
        void Pay();
    }
}
