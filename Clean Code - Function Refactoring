using Microsoft.SqlServer.Server;
using System;
using System.Data;
using System.IO;
using System.Reflection;

namespace FileCourse
{   
    public class ButtonChecker
    {        
        BallotSystemProcessor _ballotSystemProcessor = new BallotSystemProcessor();
        
        private void OnButtonClick() =>
            _ballotSystemProcessor.AnalyzeInput(this.passportTextbox.Text);           
    }

    public class MessageShower 
    {
        public void Show(string message) =>
            MessageBox.Show(message);   
    }

    public class BallotSystemProcessor 
    {
        private const int PassportNumbersCount = 10;

        MessageShower _messageShower = new MessageShower();
        private string _initialInput;

        public void AnalyzeInput(string input) 
        {
            _initialInput = input;
            input = input.Trim();

            if (input == "")
            {
                _messageShower.Show("Введите серию и номер паспорта");
            }
            else
            {
                VerifyPassportNumber(input);
            }
        }
        
        private void VerifyPassportNumber(string rawData) 
        {
            rawData = rawData.Replace(" ", string.Empty);

            if (rawData.Length < PassportNumbersCount)
            {
                _messageShower.Show("Неверный формат серии или номера паспорта");
            }
            else 
            {
                string commandText = string.Format("select * from passports where num='{0}' limit 1;", (object)Form1.ComputeSha256Hash(rawData));
                string connectionString = string.Format("Data Source=" + Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) + "\\db.sqlite");
                TryFindBallot(commandText, connectionString);
            }
        }

        private void TryFindBallot(string commandText, string connectionString) 
        {
            try
            {
                SQLiteConnection connection = new SQLiteConnection(connectionString);
                connection.Open();
                SQLiteDataAdapter sqLiteDataAdapter = new SQLiteDataAdapter(new SQLiteCommand(commandText, connection));
                DataTable dataTable1 = new DataTable();
                DataTable dataTable2 = dataTable1;
                sqLiteDataAdapter.Fill(dataTable2);

                if (dataTable1.Rows.Count > 0)
                {
                    if (Convert.ToBoolean(dataTable1.Rows[0].ItemArray[1]))
                        _messageShower.Show($"По паспорту «{_initialInput}» доступ к бюллетеню на дистанционном электронном голосовании ПРЕДОСТАВЛЕН");
                    else
                        _messageShower.Show($"По паспорту «{_initialInput}» доступ к бюллетеню на дистанционном электронном голосовании НЕ ПРЕДОСТАВЛЕН");
                }
                else
                    _messageShower.Show($"Паспорт «{_initialInput}» в списке участников дистанционного голосования НЕ НАЙДЕН"); 
                
                connection.Close();
            }
            catch (SQLiteException ex)
            {
                if (ex.ErrorCode != 1)
                    return;

                _messageShower.Show("Файл db.sqlite не найден. Положите файл в папку вместе с exe.");
            }
        }    
    }
}
