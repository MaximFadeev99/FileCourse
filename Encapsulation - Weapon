using System;

namespace FileCourse
{
    class Player
    {
        private int _health;

        public void TakeDamage(int damage)
        {
            if (damage < 0)
                throw new ArgumentOutOfRangeException(nameof(damage), "Incoming damage can't be negative");

            _health -= damage;
        }
    }

    class Bot
    {
        private readonly Weapon _weapon;

        public Bot(Weapon weapon) 
        {
            if (_weapon == null)
            {
                throw new ArgumentNullException(nameof(weapon));
            }
            else
            {
                _weapon = weapon;
            }
        }

        public void OnSeePlayer(Player player)
        {
            if (player != null)
                _weapon.Fire(player);
        }
    }

    class Weapon
    {
        private readonly int _damage;
        private readonly int _bullersPerShot;
        private int _bullets;

        public Weapon(int bulletsPerShot) 
        {
            if (bulletsPerShot < 1)
            {
                throw new ArgumentOutOfRangeException(nameof(bulletsPerShot));
            }
            else 
            {
                _bullersPerShot = bulletsPerShot;
            }
        }

        public void Fire(Player player)
        {
            if (player != null && _bullets > _bullersPerShot)
            {
                player.TakeDamage(_damage);
                _bullets -= _bullersPerShot;
            }
        }
    }
}
