using System;

namespace FileCourse
{
    class Player
    {
        private int _health;

        public void TakeDamage(int damage)
        {
            if (damage < 0)
                throw new ArgumentOutOfRangeException(nameof(damage), "Incoming damage can't be negative");

            _health -= damage;
        }
    }

    class Bot
    {
        private readonly Weapon _weapon;

        public Bot(Weapon weapon)
        {
            if (_weapon == null)
                throw new ArgumentNullException(nameof(weapon));

            _weapon = weapon;
        }

        public void OnSeePlayer(Player player)
        {
            if (player == null)
                throw new ArgumentNullException(nameof(player));

            _weapon.Fire(player);
        }
    }

    class Weapon
    {
        private readonly int _damage;
        private readonly int _bullersPerShot;
        private int _bullets;

        public Weapon(int bulletsPerShot)
        {
            if (bulletsPerShot <= 0)
                throw new ArgumentOutOfRangeException(nameof(bulletsPerShot));

            _bullersPerShot = bulletsPerShot;
        }

        private bool _canShoot => _bullets >= _bullersPerShot;

        public void Fire(Player player)
        {
            if (player == null)
                throw new ArgumentNullException(nameof(player));

            if (_canShoot == false)
                throw new InvalidOperationException("Not enough ammo");

            player.TakeDamage(_damage);
            _bullets -= _bullersPerShot;
        }
    }
}
