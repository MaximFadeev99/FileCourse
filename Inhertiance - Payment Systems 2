using System;
using System.Collections.Generic;

namespace FileCourse
{
    class Program
    {
        static void Main(string[] args)
        {
            List<PaymentSystem> _paymentSystems = new List<PaymentSystem>()
            {new PaymentSystem 
             ("pay.system1.ru/order?amount=12000RUB&hash=", new HashService(), new IdHashMessage()),
             new PaymentSystem 
             ("order.system2.ru/pay?hash=", new HashService(), new IdSumHashMessage()),
             new PaymentSystem 
             ("system3.com/pay?amount=12000&curency=RUB&hash=", new EncryptedHashService(), new SumIdHashMessage())};          
            Order order = new Order(5, 3215);

            foreach (PaymentSystem paymentSystem in _paymentSystems)
                Console.WriteLine(paymentSystem.GetPayingLink(order));

            Console.ReadKey();
        }
    }

    public class PaymentSystem : IPaymentSystem
    {
        private readonly string _fixedPart;
        private readonly IHashService _hashService;
        private readonly IHashMessage _hashMessage;

        public PaymentSystem(string fixedPart, IHashService hashService, IHashMessage hashMessage)
        {
            _fixedPart = fixedPart;
            _hashService = hashService;
            _hashMessage = hashMessage;
        }

        public string GetPayingLink(Order order)
        {
            string input =_hashMessage.GenerateHashMessage(order);
            return _fixedPart + _hashService.GenerateHash(input);
        }
    }

    public class Order
    {
        public Order(int id, int amount)
        {
            Id = id;
            Amount = amount;
        }

        public int Id { get; }
        public int Amount { get; }
    }

    public class HashService : IHashService
    {
        public virtual string GenerateHash(string message)
        {
            string hash = message;

            // do whatever a hash service is supposed to do 

            return hash;
        }
    }

    public class EncryptedHashService : HashService
    {
        private const string SecretCodeFixedPart = "SecretCode";

        private static int _orderNumber = 1;

        public override string GenerateHash(string message)
        {
            string baseHash = base.GenerateHash(message);
            return baseHash + SecretCodeFixedPart + _orderNumber++;
        }
    }

    public class IdHashMessage : IHashMessage
    {
        public virtual string GenerateHashMessage(Order order)
        {
            return order.Id.ToString();
        }
    }

    public class IdSumHashMessage : IdHashMessage 
    {
        public override string GenerateHashMessage(Order order)
        {
            return base.GenerateHashMessage(order) + order.Amount.ToString();
        }
    }

    public class SumIdHashMessage : IdHashMessage
    {
        public override string GenerateHashMessage(Order order)
        {
            return order.Amount.ToString() + base.GenerateHashMessage(order);
        }
    }

    public interface IPaymentSystem
    {
        string GetPayingLink(Order order);
    }

    public interface IHashService
    {
        string GenerateHash(string input);
    }

    public interface IHashMessage 
    {
        string GenerateHashMessage(Order order);
    }
}
